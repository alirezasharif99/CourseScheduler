version: '3.9'
services:
  app:
    container_name: app
    build:
      context: ./client
      target: 'base'
    ports:
      - '3000:3000'
    environment:
      - DANGEROUSLY_DISABLE_HOST_CHECK=true
      - PORT=3000
    depends_on:
      - api
    command: ['npm', 'start']
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:3000']
      interval: 30s
      timeout: 10s
      retries: 5
  api:
    container_name: api
    build: ./server
    depends_on:
      db:
        condition: service_healthy
    environment:
      - FLASK_ENV=development
    ports:
      - '3001:3001'
    volumes:
      - ./server:/src
    command: ['flask', '--app', 'app', '--debug', 'run', '--host', '0.0.0.0', '--port', '3001']
  db:
    container_name: db
    image: postgres:latest
    restart: unless-stopped
    environment:
      - POSTGRES_HOST=db
      - POSTGRES_DB=scheduler
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - '5432:5432'
    volumes:
      - ./test/sql/seed_f22.sql:/docker-entrypoint-initdb.d/seed_f22.sql
      - ./test/sql/seed_w23.sql:/docker-entrypoint-initdb.d/seed_w23.sql
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 5s
      timeout: 60s
      retries: 5
  e2e:
    image: cypress
    build: ./e2e
    container_name: cypress
    depends_on:
      app:
        condition: service_healthy
    environment:
      - CYPRESS_baseUrl=http://app:3000
      - CYPRESS_VIDEO=true
    command: npx cypress run --browser chrome
    volumes:
      - ./e2e/cypress:/app/cypress
      - ./e2e/cypress.config.js:/app/cypress.config.js
